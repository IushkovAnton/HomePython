# todo: –î–æ–ø–∏—Å–∞—Ç—å –∏–≥—Ä—É "–ü–æ–ª–µ —á—É–¥–µ—Å"
# –û—Ç–≥–∞–¥—ã–≤–∞–µ–º—ã–µ —Å–ª–æ–≤–∞ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ª–µ–∂–∞—Ç –≤ —Ä–∞–∑–Ω—ã—Ö –º–∞—Å—Å–∏–≤–∞—Ö –ø–æ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–º—É –∏–Ω–¥–µ–∫—Å—É.
# words = ["–æ–ø–µ—Ä–∞—Ç–æ—Ä", "–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", "–æ–±—ä–µ–∫—Ç"]
# desc_  = [ "–≠—Ç–æ —Å–ª–æ–≤–æ –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç –Ω–∞–∏–º–µ–Ω—å—à—É—é –∞–≤—Ç–æ–Ω–æ–º–Ω—É—é —á–∞—Å—Ç—å —è–∑—ã–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è", "..", ".." ]
# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–≤–æ–¥–∏—Ç—Å—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–ª–æ–≤–∞ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—É–∫–≤ –≤ –≤–∏–¥–µ —à–∞–±–ª–æ–Ω–∞. –°—Ç–∏–ª—å —à–∞–±–ª–æ–Ω–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –ª—é–±—ã–º.
# –°–ª–æ–≤–æ –∏–∑ –º–∞—Å—Å–∏–≤–∞ –±–µ—Ä–µ—Ç—Å—è —Å–ª—É—á–∞–π–Ω—ã–º –ø–æ—Ä—è–¥–∫–æ–º.
# –ü—Ä–∏–Ω–∏–º–∞—è –∏–∑ –≤–≤–æ–¥–∞ –±—É–∫–≤—É –º—ã –µ–µ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤ —Å–ª—É—á–∞–µ —É—Å–ø–µ—Ö–∞ –∞ –≤ —Å–ª—É—á–∞–µ –Ω–µ—É—Å–ø–µ—Ö–∞ –Ω–∞—Å—á–∏—Ç—ã–≤–∞–µ–º —à—Ç—Ä–∞—Ñ–Ω—ã–µ –±–∞–ª—ã.
# –ò–≥—Ä–∞ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è –¥–æ 10 —à—Ç—Ä–∞—Ñ–Ω—ã—Ö –±–∞–ª–ª–æ–≤ –ª–∏–±–æ –ø–æ–±–µ–¥—ã.
#
# –ü—Ä–∏–º–µ—Ä –≤—ã–≤–æ–¥–∞:
#
# "–≠—Ç–æ —Å–ª–æ–≤–æ –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç –Ω–∞–∏–º–µ–Ω—å—à—É—é –∞–≤—Ç–æ–Ω–æ–º–Ω—É—é —á–∞—Å—Ç—å —è–∑—ã–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è"
#
# ‚ñí  ‚ñí  ‚ñí  ‚ñí  ‚ñí  ‚ñí  ‚ñí  ‚ñí
#
# –í–≤–µ–¥–∏—Ç–µ –±—É–∫–≤—É: O
#
# O  ‚ñí  ‚ñí  ‚ñí  ‚ñí  ‚ñí  O  ‚ñí
#
#
# –í–≤–µ–¥–∏—Ç–µ –±—É–∫–≤—É: –Ø
#
# –ù–µ—Ç —Ç–∞–∫–æ–π –±—É–∫–≤—ã.
# –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å 9 –ø–æ–ø—ã—Ç–æ–∫ !
# –í–≤–µ–¥–∏—Ç–µ –±—É–∫–≤—É:
#
#

# –ò–≥—Ä–∞ –ü–æ–ª–µ —á—É–¥–µ—Å

from random import randint as ri
words = None
desc_ = None



def init():
    global words, desc_
    words = ["–æ–ø–µ—Ä–∞—Ç–æ—Ä", "–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", "–æ–±—ä–µ–∫—Ç"]
    desc_ = [ "–≠—Ç–æ —Å–ª–æ–≤–æ –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç –Ω–∞–∏–º–µ–Ω—å—à—É—é –∞–≤—Ç–æ–Ω–æ–º–Ω—É—é —á–∞—Å—Ç—å —è–∑—ã–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è", "–°–ª–æ–∂–Ω—ã–π –æ–±—ä–µ–∫—Ç, —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —á–∞—Å—Ç–µ–π", "–ù–µ–∫–æ—Ç–æ—Ä–∞—è —Å—É—â–Ω–æ—Å—Ç—å –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ, –æ–±–ª–∞–¥–∞—é—â–∞—è –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∏ –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º, –∏–º–µ–µ—Ç –∑–∞–¥–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å–≤–æ–π—Å—Ç–≤ (–∞—Ç—Ä–∏–±—É—Ç–æ–≤) –∏ –æ–ø–µ—Ä–∞—Ü–∏–π –Ω–∞–¥ –Ω–∏–º–∏ (–º–µ—Ç–æ–¥–æ–≤)" ]

init()

num = ri(0, len(words)-1)
word = words[num]
print(desc_ [num])

field = ['üîµ'] * len(word)
print(field)

m_word = list(word)
attempt = 9

while 'üîµ' in field:
    letter = input('–í–≤–µ–¥–∏—Ç–µ –±—É–∫–≤—É: ').lower()
    for key in range(len(word)):
        if word[key] == letter:
            field[key] = letter
            print(field)
    if letter not in word and attempt > 0:
        print(f'–¢–∞–∫–æ–π –±—É–∫—Ç—ã –Ω–µ—Ç, —É –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å {attempt} –ø–æ–ø—ã—Ç–æ–∫')
        attempt -= 1
    elif attempt == 0:
        print(f'–£–≤—ã, –í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏. –≠—Ç–æ –±—ã–ª–æ —Å–ª–æ–≤–æ {word.upper()}')
        exit(0)

else:
    print('–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞!')
exit(0)